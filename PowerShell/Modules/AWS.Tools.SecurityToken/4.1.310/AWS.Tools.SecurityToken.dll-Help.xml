<helpItems schema="maml"><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-STSAccessKeyInfo</name><description><para>Calls the AWS Security Token Service (STS) GetAccessKeyInfo API operation.</para></description><verb>Get</verb><noun>STSAccessKeyInfo</noun><copyright><para>&amp;copy; Copyright 2012 - 2023 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns the account identifier for the specified access key ID. 
Access keys consist of two parts: an access key ID (for example, <code>AKIAIOSFODNN7EXAMPLE</code>) and a secret access key (for example, <code>wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</code>). For more information about access keys, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html">Managing Access Keys for IAM Users</a> in the <i>IAM User Guide</i>. 
When you pass an access key ID to this operation, it returns the ID of the Amazon Web Services account to which the keys belong. Access key IDs beginning with <code>AKIA</code> are long-term credentials for an IAM user or the Amazon Web Services account root user. Access key IDs beginning with <code>ASIA</code> are temporary credentials that are created using STS operations. If the account in the response belongs to you, you can sign in as the root user and review your root user access keys. Then, you can pull a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html">credentials report</a> to learn which IAM user owns the keys. To learn who requested the temporary credentials for an <code>ASIA</code> access key, view the STS events in your <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html">CloudTrail logs</a> in the <i>IAM User Guide</i>. 
This operation does not indicate the state of the access key. The key might be active, inactive, or deleted. Active keys might not have permissions to perform an operation. Providing a deleted access key might return an error that the key doesn&amp;#39;t exist. </para></description><syntax><syntaxItem><name>Get-STSAccessKeyInfo</name><parameter required="True" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>IdOfAccessKey</name><description><para>The identifier of an access key. 
This parameter allows (through its regex pattern) a string of characters that can consist of any upper- or lowercase letter or digit. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;Account&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.GetAccessKeyInfoResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.GetAccessKeyInfoResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PassThru</name><description><para>Changes the cmdlet behavior to return the value passed to the IdOfAccessKey parameter. The -PassThru parameter is deprecated, use -Select &#39;^IdOfAccessKey&#39; instead. This parameter will be removed in a future version. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue><type><name>Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue><type><name>Amazon.Runtime.AWSCredentials</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="True" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>IdOfAccessKey</name><description><para>The identifier of an access key. 
This parameter allows (through its regex pattern) a string of characters that can consist of any upper- or lowercase letter or digit. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue><type><name>System.Management.Automation.PSCredential</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PassThru</name><description><para>Changes the cmdlet behavior to return the value passed to the IdOfAccessKey parameter. The -PassThru parameter is deprecated, use -Select &#39;^IdOfAccessKey&#39; instead. This parameter will be removed in a future version. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue><type><name>System.Object</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;Account&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.GetAccessKeyInfoResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.GetAccessKeyInfoResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>System.String or Amazon.SecurityToken.Model.GetAccessKeyInfoResponse</name><uri /><description /></type><description><para>This cmdlet returns a System.String object.
The service call response (type Amazon.SecurityToken.Model.GetAccessKeyInfoResponse) can also be referenced from properties attached to the cmdlet entry in the $AWSHistory stack.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-STSAccessKeyInfo.html&amp;tocid=Get-STSAccessKeyInfo</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink><navigationLink><linkText>Service API Reference:</linkText><uri>https://docs.aws.amazon.com/STS/latest/APIReference/</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Use-STSRoleWithSAML</name><description><para>Calls the AWS Security Token Service AssumeRoleWithSAML API operation.</para></description><verb>Use</verb><noun>STSRoleWithSAML</noun><copyright><para>&amp;copy; Copyright 2012 - 2023 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns a set of temporary security credentials for users who have been authenticated via a SAML authentication response. This operation provides a mechanism for tying an enterprise identity store or directory to role-based AWS access without user-specific credentials or configuration. For a comparison of <code>AssumeRoleWithSAML</code> with the other APIs that produce temporary credentials, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html">Requesting Temporary Security Credentials</a> and <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison">Comparing the AWS STS APIs</a> in the <i>IAM User Guide</i>. 
The temporary security credentials returned by this operation consist of an access key ID, a secret access key, and a security token. Applications can use these temporary security credentials to sign calls to AWS services. 
The temporary security credentials are valid for the duration that you specified when calling <code>AssumeRole</code>, or until the time specified in the SAML authentication response&amp;#39;s <code>SessionNotOnOrAfter</code> value, whichever is shorter. The duration can be from 900 seconds (15 minutes) to a maximum of 3600 seconds (1 hour). The default is 1 hour. 
The temporary security credentials created by <code>AssumeRoleWithSAML</code> can be used to make API calls to any AWS service with the following exception: you cannot call the STS service&amp;#39;s <code>GetFederationToken</code> or <code>GetSessionToken</code> APIs. 
Optionally, you can pass an IAM access policy to this operation. If you choose not to pass a policy, the temporary security credentials that are returned by the operation have the permissions that are defined in the access policy of the role that is being assumed. If you pass a policy to this operation, the temporary security credentials that are returned by the operation have the permissions that are allowed by the intersection of both the access policy of the role that is being assumed, <i><b>and</b></i> the policy that you pass. This means that both policies must grant the permission for the action to be allowed. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html">Permissions for AssumeRole, AssumeRoleWithSAML, and AssumeRoleWithWebIdentity</a> in the <i>IAM User Guide</i>. 
Before your application can call <code>AssumeRoleWithSAML</code>, you must configure your SAML identity provider (IdP) to issue the claims required by AWS. Additionally, you must use AWS Identity and Access Management (IAM) to create a SAML provider entity in your AWS account that represents your identity provider, and create an IAM role that specifies this SAML provider in its trust policy.  
Calling <code>AssumeRoleWithSAML</code> does not require the use of AWS security credentials. The identity of the caller is validated by using keys in the metadata document that is uploaded for the SAML provider entity for your identity provider.  
<important><para> Calling <code>AssumeRoleWithSAML</code> can result in an entry in your AWS CloudTrail logs. The entry includes the value in the <code>NameID</code> element of the SAML assertion. We recommend that you use a NameIDType that is not associated with any personally identifiable information (PII). For example, you could instead use the Persistent Identifier (<code>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</code>). </para></important> 
For more information, see the following resources: 
 - <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i>.  
 - <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml.html">Creating SAML Identity Providers</a> in the <i>IAM User Guide</i>.  
 - <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml_relying-party.html">Configuring a Relying Party and Claims</a> in the <i>IAM User Guide</i>.  
 - <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_saml.html">Creating a Role for SAML 2.0 Federation</a> in the <i>IAM User Guide</i>.  </para></description><syntax><syntaxItem><name>Use-STSRoleWithSAML</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>RoleArn</name><description><para>The Amazon Resource Name (ARN) of the role that the caller is assuming. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>PrincipalArn</name><description><para>The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>SAMLAssertion</name><description><para>The base-64 encoded SAML authentication response provided by the IdP. 
For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html">Configuring a Relying Party and Adding Claims</a> in the <i>Using IAM</i> guide.  </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="4"><name>Policy</name><description><para>An IAM policy in JSON format. 
The policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, <i><b>and</b></i> the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html">Permissions for AssumeRole, AssumeRoleWithSAML, and AssumeRoleWithWebIdentity</a> in the <i>IAM User Guide</i>.  
The format for this parameter, as described by its regex pattern, is a string of characters up to 2048 characters in length. The characters can be any ASCII character from the space character to the end of the valid character list (\u0020-\u00FF). It can also include the tab (\u0009), linefeed (\u000A), and carriage return (\u000D) characters. 
The policy plain text must be 2048 bytes or shorter. However, an internal conversion compresses it into a packed binary format with a separate limit. The PackedPolicySize response element indicates by percentage how close to the upper size limit the policy is, with 100% equaling the maximum allowed size. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="5"><name>DurationInSeconds</name><description><para>The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the SAML authentication response&#39;s <code>SessionNotOnOrAfter</code> value. The actual expiration time is whichever value is shorter.  
This is separate from the duration of a console session that you might request using the returned credentials. The request to the federation endpoint for a console sign-in token takes a <code>SessionDuration</code> parameter that specifies the maximum length of the console session, separately from the <code>DurationSeconds</code> parameter on this API. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html">Enabling SAML 2.0 Federated Users to Access the AWS Management Console</a> in the <i>IAM User Guide</i>. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="False" position="Named"><name>Force</name><description><para>This parameter overrides confirmation prompts to force  the cmdlet to continue its operation. This parameter should always be used with caution. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The region to use. STS has a single endpoint irrespective of region, though STS in GovCloud and China (Beijing) has its own endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="False" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;*&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="5"><name>DurationInSeconds</name><description><para>The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. An expiration can also be specified in the SAML authentication response&#39;s <code>SessionNotOnOrAfter</code> value. The actual expiration time is whichever value is shorter.  
This is separate from the duration of a console session that you might request using the returned credentials. The request to the federation endpoint for a console sign-in token takes a <code>SessionDuration</code> parameter that specifies the maximum length of the console session, separately from the <code>DurationSeconds</code> parameter on this API. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html">Enabling SAML 2.0 Federated Users to Access the AWS Management Console</a> in the <i>IAM User Guide</i>. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue><type><name>System.Int32</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="False" position="Named"><name>Force</name><description><para>This parameter overrides confirmation prompts to force  the cmdlet to continue its operation. This parameter should always be used with caution. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="4"><name>Policy</name><description><para>An IAM policy in JSON format. 
The policy parameter is optional. If you pass a policy, the temporary security credentials that are returned by the operation have the permissions that are allowed by both the access policy of the role that is being assumed, <i><b>and</b></i> the policy that you pass. This gives you a way to further restrict the permissions for the resulting temporary security credentials. You cannot use the passed policy to grant permissions that are in excess of those allowed by the access policy of the role that is being assumed. For more information, <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html">Permissions for AssumeRole, AssumeRoleWithSAML, and AssumeRoleWithWebIdentity</a> in the <i>IAM User Guide</i>.  
The format for this parameter, as described by its regex pattern, is a string of characters up to 2048 characters in length. The characters can be any ASCII character from the space character to the end of the valid character list (\u0020-\u00FF). It can also include the tab (\u0009), linefeed (\u000A), and carriage return (\u000D) characters. 
The policy plain text must be 2048 bytes or shorter. However, an internal conversion compresses it into a packed binary format with a separate limit. The PackedPolicySize response element indicates by percentage how close to the upper size limit the policy is, with 100% equaling the maximum allowed size. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>PrincipalArn</name><description><para>The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The region to use. STS has a single endpoint irrespective of region, though STS in GovCloud and China (Beijing) has its own endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>RoleArn</name><description><para>The Amazon Resource Name (ARN) of the role that the caller is assuming. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>SAMLAssertion</name><description><para>The base-64 encoded SAML authentication response provided by the IdP. 
For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html">Configuring a Relying Party and Adding Claims</a> in the <i>Using IAM</i> guide.  </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="False" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;*&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse</name><uri /><description /></type><description><para>This cmdlet returns an Amazon.SecurityToken.Model.AssumeRoleWithSAMLResponse object containing multiple properties. The object can also be referenced from properties attached to the cmdlet entry in the $AWSHistory stack.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Use-STSRoleWithSAML.html&amp;tocid=Use-STSRoleWithSAML</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink><navigationLink><linkText>Service API Reference:</linkText><uri>https://docs.aws.amazon.com/STS/latest/APIReference/</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-STSCallerIdentity</name><description><para>Calls the AWS Security Token Service (STS) GetCallerIdentity API operation.</para></description><verb>Get</verb><noun>STSCallerIdentity</noun><copyright><para>&amp;copy; Copyright 2012 - 2023 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns details about the IAM user or role whose credentials are used to call the operation. 
No permissions are required to perform this operation. If an administrator adds a policy to your IAM user or role that explicitly denies access to the <code>sts:GetCallerIdentity</code> action, you can still perform this operation. Permissions are not required because the same information is returned when an IAM user or role is denied access. To view an example response, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_access-denied-delete-mfa">I Am Not Authorized to Perform: iam:DeleteVirtualMFADevice</a> in the <i>IAM User Guide</i>. </para></description><syntax><syntaxItem><name>Get-STSCallerIdentity</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;*&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.GetCallerIdentityResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.GetCallerIdentityResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue><type><name>Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue><type><name>Amazon.Runtime.AWSCredentials</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue><type><name>System.Management.Automation.PSCredential</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue><type><name>System.Object</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;*&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.GetCallerIdentityResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.GetCallerIdentityResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>Amazon.SecurityToken.Model.GetCallerIdentityResponse</name><uri /><description /></type><description><para>This cmdlet returns an Amazon.SecurityToken.Model.GetCallerIdentityResponse object containing multiple properties. The object can also be referenced from properties attached to the cmdlet entry in the $AWSHistory stack.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-STSCallerIdentity.html&amp;tocid=Get-STSCallerIdentity</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink><navigationLink><linkText>Service API Reference:</linkText><uri>https://docs.aws.amazon.com/STS/latest/APIReference/</uri></navigationLink></relatedLinks></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Convert-STSAuthorizationMessage</name><description><para>Calls the AWS Security Token Service (STS) DecodeAuthorizationMessage API operation.</para></description><verb>Convert</verb><noun>STSAuthorizationMessage</noun><copyright><para>&amp;copy; Copyright 2012 - 2023 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Decodes additional information about the authorization status of a request from an encoded message returned in response to an Amazon Web Services request. 
For example, if a user is not authorized to perform an operation that he or she has requested, the request returns a <code>Client.UnauthorizedOperation</code> response (an HTTP 403 response). Some Amazon Web Services operations additionally return an encoded message that can provide details about this authorization failure.  
Only certain Amazon Web Services operations return an encoded authorization message. The documentation for an individual operation indicates whether that operation returns an encoded message in addition to returning an HTTP code. 
The message is encoded because the details of the authorization status can contain privileged information that the user who requested the operation should not see. To decode an authorization status message, a user must be granted permissions through an IAM <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html">policy</a> to request the <code>DecodeAuthorizationMessage</code> (<code>sts:DecodeAuthorizationMessage</code>) action.  
The decoded message includes the following type of information: 
 - 
Whether the request was denied due to an explicit deny or due to the absence of an explicit allow. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-denyallow">Determining Whether a Request is Allowed or Denied</a> in the <i>IAM User Guide</i>.  
 - 
The principal who made the request. 
 - 
The requested action. 
 - 
The requested resource. 
 - 
The values of condition keys in the context of the user&amp;#39;s request. </para></description><syntax><syntaxItem><name>Convert-STSAuthorizationMessage</name><parameter required="True" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>EncodedMessage</name><description><para>The encoded message that was returned with the response. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;DecodedMessage&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PassThru</name><description><para>Changes the cmdlet behavior to return the value passed to the EncodedMessage parameter. The -PassThru parameter is deprecated, use -Select &#39;^EncodedMessage&#39; instead. This parameter will be removed in a future version. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Force</name><description><para>This parameter overrides confirmation prompts to force  the cmdlet to continue its operation. This parameter should always be used with caution. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue><type><name>Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue><type><name>Amazon.Runtime.AWSCredentials</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="True" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>EncodedMessage</name><description><para>The encoded message that was returned with the response. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Force</name><description><para>This parameter overrides confirmation prompts to force  the cmdlet to continue its operation. This parameter should always be used with caution. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue><type><name>System.Management.Automation.PSCredential</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PassThru</name><description><para>Changes the cmdlet behavior to return the value passed to the EncodedMessage parameter. The -PassThru parameter is deprecated, use -Select &#39;^EncodedMessage&#39; instead. This parameter will be removed in a future version. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue><type><name>System.Object</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;DecodedMessage&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>System.String or Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse</name><uri /><description /></type><description><para>This cmdlet returns a System.String object.
The service call response (type Amazon.SecurityToken.Model.DecodeAuthorizationMessageResponse) can also be referenced from properties attached to the cmdlet entry in the $AWSHistory stack.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Convert-STSAuthorizationMessage.html&amp;tocid=Convert-STSAuthorizationMessage</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink><navigationLink><linkText>Service API Reference:</linkText><uri>https://docs.aws.amazon.com/STS/latest/APIReference/</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Convert-STSAuthorizationMessage -EncodedMessage "...encoded message..."</code><remarks><para>Description</para><para>-----------</para><para>Decodes the additional information contained in the supplied encoded message content that was returned in response to a request. The additional information is encoded because details of the authorization status can constitute privileged information that the user who requested the action should not see.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Use-STSWebIdentityRole</name><description><para>Calls the AWS Security Token Service AssumeRoleWithWebIdentity API operation.</para></description><verb>Use</verb><noun>STSWebIdentityRole</noun><copyright><para>&amp;copy; Copyright 2012 - 2023 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para> Returns a set of temporary security credentials for users who have been authenticated in a mobile or web application with a web identity provider, such as Login with Amazon, Facebook, or Google. <c>AssumeRoleWithWebIdentity</c> is an API call that does not require the use of AWS security credentials. Therefore, you can distribute an application (for example, on mobile devices) that requests temporary security credentials without including long-term AWS credentials in the application or by deploying server-based proxy services that use long-term AWS credentials. For more information, see Creating a Mobile Application with Third-Party Sign-In in <i>AWS Security Token Service</i> . 
 The temporary security credentials consist of an access key ID, a secret access key, and a security token. Applications can use these temporary security credentials to sign calls to AWS service APIs. The credentials are valid for the duration that you specified when calling <c>AssumeRoleWithWebIdentity</c> , which can be from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the temporary security credentials are valid for 1 hour.  
 The temporary security credentials that are returned from the <c>AssumeRoleWithWebIdentity</c> response have the permissions that are associated with the access policy of the role being assumed and any policies that are associated with the AWS resource being accessed. You can further restrict the permissions of the temporary security credentials by passing a policy in the request. The resulting permissions are an intersection of both policies. The role&amp;#39;s access policy and the policy that you passed are evaluated when calls to AWS service APIs are made using the temporary security credentials.  
Before your application can call <c>AssumeRoleWithWebIdentity</c> , you must have an identity token from an identity provider and create a role that the application can assume. Typically, to get an identity token, you need to register your application with the identity provider and get a unique application ID from that provider. Also, when you create the role that the application assumes, you must specify the registered identity provider as a principal (establish trust with the identity provider). For more information, see Creating Temporary Security Credentials for Mobile Apps Using Third-Party Identity Providers.  </para></description><syntax><syntaxItem><name>Use-STSWebIdentityRole</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>RoleArn</name><description><para>The Amazon Resource Name (ARN) of the role that the caller is assuming. 
<b>Constraints:</b><list type="definition"><item><term>Length</term><description>20 - 2048</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>RoleSessionName</name><description><para>An identifier for the assumed role session. Typically, you pass the name or identifier that is associated with the user who is using your application. That way, the temporary security credentials that your application will use are associated with that user. This session name is included as part of the ARN and assumed role ID in the <c>AssumedRoleUser</c> response element. 
<b>Constraints:</b><list type="definition"><item><term>Length</term><description>2 - 32</description></item><item><term>Pattern</term><description>[\w+=,.@-]*</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>WebIdentityToken</name><description><para>The OAuth 2.0 access token or OpenID Connect id token that is provided by the identity provider. Your application must get this token by authenticating the user who is using your application with a web identity provider before the application makes an <c>AssumeRoleWithWebIdentity</c> call. 
<b>Constraints:</b><list type="definition"><item><term>Length</term><description>4 - 2048</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="4"><name>ProviderId</name><description><para>Specify this value only for OAuth access tokens. Do not specify this value for OpenID Connect id tokens, such as <c>accounts.google.com</c>. This is the fully-qualified host component of the domain name of the identity provider. Do not include URL schemes and port numbers. Currently, <c>www.amazon.com</c> and <c>graph.facebook.com</c> are supported. 
<b>Constraints:</b><list type="definition"><item><term>Length</term><description>4 - 2048</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="5"><name>Policy</name><description><para>A supplemental policy that is associated with the temporary security credentials from the <c>AssumeRoleWithWebIdentity</c> call. The resulting permissions of the temporary security credentials are an intersection of this policy and the access policy that is associated with the role. Use this policy to further restrict the permissions of the temporary security credentials. 
<b>Constraints:</b><list type="definition"><item><term>Length</term><description>1 - 2048</description></item><item><term>Pattern</term><description>[\u0009\u000A\u000D\u0020-\u00FF]+</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Duration</name><description><para>The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. 
<b>Constraints:</b><list type="definition"><item><term>Range</term><description>900 - 129600</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The region to use. STS has a single endpoint irrespective of region, though STS in GovCloud and China (Beijing) has its own endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="False" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Duration</name><description><para>The duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set to 3600 seconds. 
<b>Constraints:</b><list type="definition"><item><term>Range</term><description>900 - 129600</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue><type><name>System.Int32</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="5"><name>Policy</name><description><para>A supplemental policy that is associated with the temporary security credentials from the <c>AssumeRoleWithWebIdentity</c> call. The resulting permissions of the temporary security credentials are an intersection of this policy and the access policy that is associated with the role. Use this policy to further restrict the permissions of the temporary security credentials. 
<b>Constraints:</b><list type="definition"><item><term>Length</term><description>1 - 2048</description></item><item><term>Pattern</term><description>[\u0009\u000A\u000D\u0020-\u00FF]+</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="4"><name>ProviderId</name><description><para>Specify this value only for OAuth access tokens. Do not specify this value for OpenID Connect id tokens, such as <c>accounts.google.com</c>. This is the fully-qualified host component of the domain name of the identity provider. Do not include URL schemes and port numbers. Currently, <c>www.amazon.com</c> and <c>graph.facebook.com</c> are supported. 
<b>Constraints:</b><list type="definition"><item><term>Length</term><description>4 - 2048</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The region to use. STS has a single endpoint irrespective of region, though STS in GovCloud and China (Beijing) has its own endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>RoleArn</name><description><para>The Amazon Resource Name (ARN) of the role that the caller is assuming. 
<b>Constraints:</b><list type="definition"><item><term>Length</term><description>20 - 2048</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>RoleSessionName</name><description><para>An identifier for the assumed role session. Typically, you pass the name or identifier that is associated with the user who is using your application. That way, the temporary security credentials that your application will use are associated with that user. This session name is included as part of the ARN and assumed role ID in the <c>AssumedRoleUser</c> response element. 
<b>Constraints:</b><list type="definition"><item><term>Length</term><description>2 - 32</description></item><item><term>Pattern</term><description>[\w+=,.@-]*</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="False" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>WebIdentityToken</name><description><para>The OAuth 2.0 access token or OpenID Connect id token that is provided by the identity provider. Your application must get this token by authenticating the user who is using your application with a web identity provider before the application makes an <c>AssumeRoleWithWebIdentity</c> call. 
<b>Constraints:</b><list type="definition"><item><term>Length</term><description>4 - 2048</description></item></list> </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>Amazon.PowerShell.Common.AWSWebIdentityCredentials or Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse</name><uri /><description /></type><description><para>This cmdlet returns an Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse instance. The service response (type Amazon.SecurityToken.Model.AssumeRoleWithWebIdentityResponse) is added to the cmdlet entry in the $AWSHistory stack.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Use-STSWebIdentityRole.html&amp;tocid=Use-STSWebIdentityRole</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink><navigationLink><linkText>Service API Reference:</linkText><uri>https://docs.aws.amazon.com/STS/latest/APIReference/</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Use-STSWebIdentityRole -DurationInSeconds 3600 -ProviderId "www.amazon.com" -RoleSessionName "app1" -RoleArn "arn:aws:iam::123456789012:role/FederatedWebIdentityRole" -WebIdentityToken "Atza...DVI0r1"</code><remarks><para>Description</para><para>-----------</para><para>Returns a temporary set of credentials, valid for one hour, for a user who has been authenticated with the Login with Amazon identity provider. The credentials assume the access policy associated with the role identified by the role ARN. Optionally, you can pass a JSON policy to the -Policy parameter that further refine the access permissions (you cannot grant more permissions than are available in the permissions associated with the role). The value supplied to the -WebIdentityToken is the unique user identifier that was returned by the identity provider. </para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-STSFederationToken</name><description><para>Calls the AWS Security Token Service (STS) GetFederationToken API operation.</para></description><verb>Get</verb><noun>STSFederationToken</noun><copyright><para>&amp;copy; Copyright 2012 - 2023 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for a federated user. A typical use is in a proxy application that gets temporary security credentials on behalf of distributed applications inside a corporate network. You must call the <code>GetFederationToken</code> operation using the long-term security credentials of an IAM user. As a result, this call is appropriate in contexts where those credentials can be safely stored, usually in a server-based application. For a comparison of <code>GetFederationToken</code> with the other API operations that produce temporary credentials, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html">Requesting Temporary Security Credentials</a> and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison">Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User Guide</i>. 
You can create a mobile-based or browser-based app that can authenticate users using a web identity provider like Login with Amazon, Facebook, Google, or an OpenID Connect-compatible identity provider. In this case, we recommend that you use <a href="http://aws.amazon.com/cognito/">Amazon Cognito</a> or <code>AssumeRoleWithWebIdentity</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity">Federation Through a Web-based Identity Provider</a> in the <i>IAM User Guide</i>. 
You can also call <code>GetFederationToken</code> using the security credentials of an Amazon Web Services account root user, but we do not recommend it. Instead, we recommend that you create an IAM user for the purpose of the proxy application. Then attach a policy to the IAM user that limits federated users to only the actions and resources that they need to access. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html">IAM Best Practices</a> in the <i>IAM User Guide</i>.  
<b>Session duration</b> 
The temporary credentials are valid for the specified duration, from 900 seconds (15 minutes) up to a maximum of 129,600 seconds (36 hours). The default session duration is 43,200 seconds (12 hours). Temporary credentials obtained by using the Amazon Web Services account root user credentials have a maximum duration of 3,600 seconds (1 hour). 
<b>Permissions</b> 
You can use the temporary credentials created by <code>GetFederationToken</code> in any Amazon Web Services service with the following exceptions: 
 - 
You cannot call any IAM operations using the CLI or the Amazon Web Services API. This limitation does not apply to console sessions. 
 - 
You cannot call any STS operations except <code>GetCallerIdentity</code>. 
You can use temporary credentials for single sign-on (SSO) to the console. 
You must pass an inline or managed <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">session policy</a> to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policy Amazon Resource Names (ARNs) to use as managed session policies. The plaintext that you use for both inline and managed session policies can&amp;#39;t exceed 2,048 characters. 
Though the session policy parameters are optional, if you do not pass a policy, then the resulting federated user session has no permissions. When you pass session policies, the session permissions are the intersection of the IAM user policies and the session policies that you pass. This gives you a way to further restrict the permissions for a federated user. You cannot use session policies to grant more permissions than those that are defined in the permissions policy of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">Session Policies</a> in the <i>IAM User Guide</i>. For information about using <code>GetFederationToken</code> to create temporary security credentials, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken">GetFederationToken—Federation Through a Custom Identity Broker</a>.  
You can use the credentials to access a resource that has a resource-based policy. If that policy specifically references the federated user session in the <code>Principal</code> element of the policy, the session has the permissions allowed by the policy. These permissions are granted in addition to the permissions granted by the session policies. 
<b>Tags</b> 
(Optional) You can pass tag key-value pairs to your session. These are called session tags. For more information about session tags, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html">Passing Session Tags in STS</a> in the <i>IAM User Guide</i>. 
You can create a mobile-based or browser-based app that can authenticate users using a web identity provider like Login with Amazon, Facebook, Google, or an OpenID Connect-compatible identity provider. In this case, we recommend that you use <a href="http://aws.amazon.com/cognito/">Amazon Cognito</a> or <code>AssumeRoleWithWebIdentity</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity">Federation Through a Web-based Identity Provider</a> in the <i>IAM User Guide</i>. 
An administrator must grant you the permissions necessary to pass session tags. The administrator can also create granular permissions to allow you to pass only specific session tags. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html">Tutorial: Using Tags for Attribute-Based Access Control</a> in the <i>IAM User Guide</i>. 
Tag key–value pairs are not case sensitive, but case is preserved. This means that you cannot have separate <code>Department</code> and <code>department</code> tag keys. Assume that the user that you are federating has the <code>Department</code>=<code>Marketing</code> tag and you pass the <code>department</code>=<code>engineering</code> session tag. <code>Department</code> and <code>department</code> are not saved as separate tags, and the session tag passed in the request takes precedence over the user tag. </para></description><syntax><syntaxItem><name>Get-STSFederationToken</name><parameter required="True" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>Name</name><description><para>The name of the federated user. The name is used as an identifier for the temporary security credentials (such as <code>Bob</code>). For example, you can reference the federated user name in a resource-based policy, such as in an Amazon S3 bucket policy. 
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@- </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>Policy</name><description><para>An IAM policy in JSON format that you want to use as an inline session policy. 
You must pass an inline or managed <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">session policy</a> to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policy Amazon Resource Names (ARNs) to use as managed session policies. 
This parameter is optional. However, if you do not pass any session policies, then the resulting federated user session has no permissions. 
When you pass session policies, the session permissions are the intersection of the IAM user policies and the session policies that you pass. This gives you a way to further restrict the permissions for a federated user. You cannot use session policies to grant more permissions than those that are defined in the permissions policy of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">Session Policies</a> in the <i>IAM User Guide</i>. 
The resulting credentials can be used to access a resource that has a resource-based policy. If that policy specifically references the federated user session in the <code>Principal</code> element of the policy, the session has the permissions allowed by the policy. These permissions are granted in addition to the permissions that are granted by the session policies. 
The plaintext that you use for both inline and managed session policies can&#39;t exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (\u0020 through \u00FF). It can also include the tab (\u0009), linefeed (\u000A), and carriage return (\u000D) characters. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>DurationInSeconds</name><description><para>The duration, in seconds, that the session should last. Acceptable durations for federation sessions range from 900 seconds (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the default. Sessions obtained using Amazon Web Services account root user credentials are restricted to a maximum of 3,600 seconds (one hour). If the specified duration is longer than one hour, the session obtained by using root user credentials defaults to one hour. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PolicyArn</name><description><para>The Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as a managed session policy. The policies must exist in the same account as the IAM user that is requesting federated access. 
You must pass an inline or managed <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">session policy</a> to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policy Amazon Resource Names (ARNs) to use as managed session policies. The plaintext that you use for both inline and managed session policies can&#39;t exceed 2,048 characters. You can provide up to 10 managed policy ARNs. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the Amazon Web Services General Reference. 
This parameter is optional. However, if you do not pass any session policies, then the resulting federated user session has no permissions. 
When you pass session policies, the session permissions are the intersection of the IAM user policies and the session policies that you pass. This gives you a way to further restrict the permissions for a federated user. You cannot use session policies to grant more permissions than those that are defined in the permissions policy of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">Session Policies</a> in the <i>IAM User Guide</i>. 
The resulting credentials can be used to access a resource that has a resource-based policy. If that policy specifically references the federated user session in the <code>Principal</code> element of the policy, the session has the permissions allowed by the policy. These permissions are granted in addition to the permissions that are granted by the session policies. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.Model.PolicyDescriptorType[]</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Tag</name><description><para>A list of session tags. Each session tag consists of a key name and an associated value. For more information about session tags, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html">Passing Session Tags in STS</a> in the <i>IAM User Guide</i>. 
This parameter is optional. You can pass up to 50 session tags. The plaintext session tag keys can’t exceed 128 characters and the values can’t exceed 256 characters. For these and additional limits, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length">IAM and STS Character Limits</a> in the <i>IAM User Guide</i>. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. 
You can pass a session tag with the same key as a tag that is already attached to the user you are federating. When you do, session tags override a user tag with the same key.  
Tag key–value pairs are not case sensitive, but case is preserved. This means that you cannot have separate <code>Department</code> and <code>department</code> tag keys. Assume that the role has the <code>Department</code>=<code>Marketing</code> tag and you pass the <code>department</code>=<code>engineering</code> session tag. <code>Department</code> and <code>department</code> are not saved as separate tags, and the session tag passed in the request takes precedence over the role tag. </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.Model.Tag[]</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;*&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.GetFederationTokenResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.GetFederationTokenResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PassThru</name><description><para>Changes the cmdlet behavior to return the value passed to the Name parameter. The -PassThru parameter is deprecated, use -Select &#39;^Name&#39; instead. This parameter will be removed in a future version. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue><type><name>Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue><type><name>Amazon.Runtime.AWSCredentials</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>DurationInSeconds</name><description><para>The duration, in seconds, that the session should last. Acceptable durations for federation sessions range from 900 seconds (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the default. Sessions obtained using Amazon Web Services account root user credentials are restricted to a maximum of 3,600 seconds (one hour). If the specified duration is longer than one hour, the session obtained by using root user credentials defaults to one hour. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue><type><name>System.Int32</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="True" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>Name</name><description><para>The name of the federated user. The name is used as an identifier for the temporary security credentials (such as <code>Bob</code>). For example, you can reference the federated user name in a resource-based policy, such as in an Amazon S3 bucket policy. 
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@- </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue><type><name>System.Management.Automation.PSCredential</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PassThru</name><description><para>Changes the cmdlet behavior to return the value passed to the Name parameter. The -PassThru parameter is deprecated, use -Select &#39;^Name&#39; instead. This parameter will be removed in a future version. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>Policy</name><description><para>An IAM policy in JSON format that you want to use as an inline session policy. 
You must pass an inline or managed <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">session policy</a> to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policy Amazon Resource Names (ARNs) to use as managed session policies. 
This parameter is optional. However, if you do not pass any session policies, then the resulting federated user session has no permissions. 
When you pass session policies, the session permissions are the intersection of the IAM user policies and the session policies that you pass. This gives you a way to further restrict the permissions for a federated user. You cannot use session policies to grant more permissions than those that are defined in the permissions policy of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">Session Policies</a> in the <i>IAM User Guide</i>. 
The resulting credentials can be used to access a resource that has a resource-based policy. If that policy specifically references the federated user session in the <code>Principal</code> element of the policy, the session has the permissions allowed by the policy. These permissions are granted in addition to the permissions that are granted by the session policies. 
The plaintext that you use for both inline and managed session policies can&#39;t exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (\u0020 through \u00FF). It can also include the tab (\u0009), linefeed (\u000A), and carriage return (\u000D) characters. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PolicyArn</name><description><para>The Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as a managed session policy. The policies must exist in the same account as the IAM user that is requesting federated access. 
You must pass an inline or managed <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">session policy</a> to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policy Amazon Resource Names (ARNs) to use as managed session policies. The plaintext that you use for both inline and managed session policies can&#39;t exceed 2,048 characters. You can provide up to 10 managed policy ARNs. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the Amazon Web Services General Reference. 
This parameter is optional. However, if you do not pass any session policies, then the resulting federated user session has no permissions. 
When you pass session policies, the session permissions are the intersection of the IAM user policies and the session policies that you pass. This gives you a way to further restrict the permissions for a federated user. You cannot use session policies to grant more permissions than those that are defined in the permissions policy of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">Session Policies</a> in the <i>IAM User Guide</i>. 
The resulting credentials can be used to access a resource that has a resource-based policy. If that policy specifically references the federated user session in the <code>Principal</code> element of the policy, the session has the permissions allowed by the policy. These permissions are granted in addition to the permissions that are granted by the session policies. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.Model.PolicyDescriptorType[]</parameterValue><type><name>Amazon.SecurityToken.Model.PolicyDescriptorType[]</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue><type><name>System.Object</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;*&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.GetFederationTokenResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.GetFederationTokenResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Tag</name><description><para>A list of session tags. Each session tag consists of a key name and an associated value. For more information about session tags, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html">Passing Session Tags in STS</a> in the <i>IAM User Guide</i>. 
This parameter is optional. You can pass up to 50 session tags. The plaintext session tag keys can’t exceed 128 characters and the values can’t exceed 256 characters. For these and additional limits, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length">IAM and STS Character Limits</a> in the <i>IAM User Guide</i>. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. 
You can pass a session tag with the same key as a tag that is already attached to the user you are federating. When you do, session tags override a user tag with the same key.  
Tag key–value pairs are not case sensitive, but case is preserved. This means that you cannot have separate <code>Department</code> and <code>department</code> tag keys. Assume that the role has the <code>Department</code>=<code>Marketing</code> tag and you pass the <code>department</code>=<code>engineering</code> session tag. <code>Department</code> and <code>department</code> are not saved as separate tags, and the session tag passed in the request takes precedence over the role tag. </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.Model.Tag[]</parameterValue><type><name>Amazon.SecurityToken.Model.Tag[]</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>Amazon.SecurityToken.Model.GetFederationTokenResponse</name><uri /><description /></type><description><para>This cmdlet returns an Amazon.SecurityToken.Model.GetFederationTokenResponse object containing multiple properties. The object can also be referenced from properties attached to the cmdlet entry in the $AWSHistory stack.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-STSFederationToken.html&amp;tocid=Get-STSFederationToken</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink><navigationLink><linkText>Service API Reference:</linkText><uri>https://docs.aws.amazon.com/STS/latest/APIReference/</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Get-STSFederationToken -Name "Bob" -Policy "...JSON policy..." -DurationInSeconds 3600</code><remarks><para>Description</para><para>-----------</para><para>Requests a federated token valid for one hour  using "Bob" as the name of the federated user. This name can be used to reference the federated user name in a resource-based policy (such as an Amazon S3 bucket policy). The supplied IAM policy, in JSON format, is used to scope down the permissions that are available to the IAM user. The supplied policy cannot grant more permissions than those granted to the requesting user, with the final permissions for the federated user being the most restrictive set based on the intersection of the passed policy and the IAM user policy.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Use-STSRole</name><description><para>Calls the AWS Security Token Service (STS) AssumeRole API operation.</para></description><verb>Use</verb><noun>STSRole</noun><copyright><para>&amp;copy; Copyright 2012 - 2023 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns a set of temporary security credentials that you can use to access Amazon Web Services resources. These temporary credentials consist of an access key ID, a secret access key, and a security token. Typically, you use <code>AssumeRole</code> within your account or for cross-account access. For a comparison of <code>AssumeRole</code> with other API operations that produce temporary credentials, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html">Requesting Temporary Security Credentials</a> and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison">Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User Guide</i>. 
<b>Permissions</b> 
The temporary security credentials created by <code>AssumeRole</code> can be used to make API calls to any Amazon Web Services service with the following exception: You cannot call the Amazon Web Services STS <code>GetFederationToken</code> or <code>GetSessionToken</code> API operations. 
(Optional) You can pass inline or managed <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">session policies</a> to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policy Amazon Resource Names (ARNs) to use as managed session policies. The plaintext that you use for both inline and managed session policies can&amp;#39;t exceed 2,048 characters. Passing policies to this operation returns new temporary credentials. The resulting session&amp;#39;s permissions are the intersection of the role&amp;#39;s identity-based policy and the session policies. You can use the role&amp;#39;s temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">Session Policies</a> in the <i>IAM User Guide</i>. 
When you create a role, you create two policies: A role trust policy that specifies <i>who</i> can assume the role and a permissions policy that specifies <i>what</i> can be done with the role. You specify the trusted principal who is allowed to assume the role in the role trust policy. 
To assume a role from a different account, your Amazon Web Services account must be trusted by the role. The trust relationship is defined in the role&amp;#39;s trust policy when the role is created. That trust policy states which accounts are allowed to delegate that access to users in the account.  
A user who wants to access a role in a different account must also have permissions that are delegated from the user account administrator. The administrator must attach a policy that allows the user to call <code>AssumeRole</code> for the ARN of the role in the other account. 
To allow a user to assume a role in the same account, you can do either of the following: 
 - 
Attach a policy to the user that allows the user to call <code>AssumeRole</code> (as long as the role&amp;#39;s trust policy trusts the account). 
 - 
Add the user as a principal directly in the role&amp;#39;s trust policy. 
You can do either because the role’s trust policy acts as an IAM resource-based policy. When a resource-based policy grants access to a principal in the same account, no additional identity-based policy is required. For more information about trust policies and resource-based policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html">IAM Policies</a> in the <i>IAM User Guide</i>. 
<b>Tags</b> 
(Optional) You can pass tag key-value pairs to your session. These tags are called session tags. For more information about session tags, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html">Passing Session Tags in STS</a> in the <i>IAM User Guide</i>. 
An administrator must grant you the permissions necessary to pass session tags. The administrator can also create granular permissions to allow you to pass only specific session tags. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html">Tutorial: Using Tags for Attribute-Based Access Control</a> in the <i>IAM User Guide</i>. 
You can set the session tags as transitive. Transitive tags persist during role chaining. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining">Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>. 
<b>Using MFA with AssumeRole</b> 
(Optional) You can include multi-factor authentication (MFA) information when you call <code>AssumeRole</code>. This is useful for cross-account scenarios to ensure that the user that assumes the role has been authenticated with an Amazon Web Services MFA device. In that scenario, the trust policy of the role being assumed includes a condition that tests for MFA authentication. If the caller does not include valid MFA information, the request to assume the role is denied. The condition in a trust policy that tests for MFA authentication might look like the following example. 
<code>"Condition": {"Bool": {"aws:MultiFactorAuthPresent": true}}</code> 
For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html">Configuring MFA-Protected API Access</a> in the <i>IAM User Guide</i> guide. 
To use MFA with <code>AssumeRole</code>, you pass values for the <code>SerialNumber</code> and <code>TokenCode</code> parameters. The <code>SerialNumber</code> value identifies the user&amp;#39;s hardware or virtual MFA device. The <code>TokenCode</code> is the time-based one-time password (TOTP) that the MFA device produces.  </para></description><syntax><syntaxItem><name>Use-STSRole</name><parameter required="True" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>RoleArn</name><description><para>The Amazon Resource Name (ARN) of the role to assume. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="True" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>RoleSessionName</name><description><para>An identifier for the assumed role session. 
Use the role session name to uniquely identify a session when the same role is assumed by different principals or for different reasons. In cross-account scenarios, the role session name is visible to, and can be logged by the account that owns the role. The role session name is also used in the ARN of the assumed role principal. This means that subsequent cross-account API requests that use the temporary security credentials will expose the role session name to the external account in their CloudTrail logs. 
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@- </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>Policy</name><description><para>An IAM policy in JSON format that you want to use as an inline session policy. 
This parameter is optional. Passing policies to this operation returns new temporary credentials. The resulting session&#39;s permissions are the intersection of the role&#39;s identity-based policy and the session policies. You can use the role&#39;s temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">Session Policies</a> in the <i>IAM User Guide</i>. 
The plaintext that you use for both inline and managed session policies can&#39;t exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (\u0020 through \u00FF). It can also include the tab (\u0009), linefeed (\u000A), and carriage return (\u000D) characters. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="4"><name>DurationInSeconds</name><description><para>The duration, in seconds, of the role session. The value specified can range from 900 seconds (15 minutes) up to the maximum session duration set for the role. The maximum session duration setting can have a value from 1 hour to 12 hours. If you specify a value higher than this setting or the administrator setting (whichever is lower), the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails.  
Role chaining limits your Amazon Web Services CLI or Amazon Web Services API role session to a maximum of one hour. When you use the <code>AssumeRole</code> API operation to assume a role, you can specify the duration of your role session with the <code>DurationSeconds</code> parameter. You can specify a parameter value of up to 43200 seconds (12 hours), depending on the maximum session duration setting for your role. However, if you assume a role using role chaining and provide a <code>DurationSeconds</code> parameter value greater than one hour, the operation fails. To learn how to view the maximum value for your role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session">View the Maximum Session Duration Setting for a Role</a> in the <i>IAM User Guide</i>. 
By default, the value is set to <code>3600</code> seconds.  
The <code>DurationSeconds</code> parameter is separate from the duration of a console session that you might request using the returned credentials. The request to the federation endpoint for a console sign-in token takes a <code>SessionDuration</code> parameter that specifies the maximum length of the console session. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html">Creating a URL that Enables Federated Users to Access the Amazon Web Services Management Console</a> in the <i>IAM User Guide</i>. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="5"><name>ExternalId</name><description><para>A unique identifier that might be required when you assume a role in another account. If the administrator of the account to which the role belongs provided you with an external ID, then provide that value in the <code>ExternalId</code> parameter. This value can be any string, such as a passphrase or account number. A cross-account role is usually set up to trust everyone in an account. Therefore, the administrator of the trusting account might send an external ID to the administrator of the trusted account. That way, only someone with the ID can assume the role, rather than everyone in the account. For more information about the external ID, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html">How to Use an External ID When Granting Access to Your Amazon Web Services Resources to a Third Party</a> in the <i>IAM User Guide</i>. 
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/- </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PolicyArn</name><description><para>The Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as managed session policies. The policies must exist in the same account as the role. 
This parameter is optional. You can provide up to 10 managed policy ARNs. However, the plaintext that you use for both inline and managed session policies can&#39;t exceed 2,048 characters. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the Amazon Web Services General Reference. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. 
Passing policies to this operation returns new temporary credentials. The resulting session&#39;s permissions are the intersection of the role&#39;s identity-based policy and the session policies. You can use the role&#39;s temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">Session Policies</a> in the <i>IAM User Guide</i>. </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.Model.PolicyDescriptorType[]</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SerialNumber</name><description><para>The identification number of the MFA device that is associated with the user who is making the <code>AssumeRole</code> call. Specify this value if the trust policy of the role being assumed includes a condition that requires MFA authentication. The value is either the serial number for a hardware device (such as <code>GAHT12345678</code>) or an Amazon Resource Name (ARN) for a virtual device (such as <code>arn:aws:iam::123456789012:mfa/user</code>). 
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@- </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SourceIdentity</name><description><para>The source identity specified by the principal that is calling the <code>AssumeRole</code> operation. 
You can require users to specify a source identity when they assume a role. You do this by using the <code>sts:SourceIdentity</code> condition key in a role trust policy. You can use source identity information in CloudTrail logs to determine who took actions with a role. You can use the <code>aws:SourceIdentity</code> condition key to further control access to Amazon Web Services resources based on the value of source identity. For more information about using source identity, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html">Monitor and control actions taken with assumed roles</a> in the <i>IAM User Guide</i>. 
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-. You cannot use a value that begins with the text <code>aws:</code>. This prefix is reserved for Amazon Web Services internal use. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Tag</name><description><para>A list of session tags that you want to pass. Each session tag consists of a key name and an associated value. For more information about session tags, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html">Tagging Amazon Web Services STS Sessions</a> in the <i>IAM User Guide</i>. 
This parameter is optional. You can pass up to 50 session tags. The plaintext session tag keys can’t exceed 128 characters, and the values can’t exceed 256 characters. For these and additional limits, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length">IAM and STS Character Limits</a> in the <i>IAM User Guide</i>. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. 
You can pass a session tag with the same key as a tag that is already attached to the role. When you do, session tags override a role tag with the same key.  
Tag key–value pairs are not case sensitive, but case is preserved. This means that you cannot have separate <code>Department</code> and <code>department</code> tag keys. Assume that the role has the <code>Department</code>=<code>Marketing</code> tag and you pass the <code>department</code>=<code>engineering</code> session tag. <code>Department</code> and <code>department</code> are not saved as separate tags, and the session tag passed in the request takes precedence over the role tag. 
Additionally, if you used temporary credentials to perform this operation, the new session inherits any transitive session tags from the calling session. If you pass a session tag with the same key as an inherited tag, the operation fails. To view the inherited tags for a session, see the CloudTrail logs. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_ctlogs">Viewing Session Tags in CloudTrail</a> in the <i>IAM User Guide</i>. </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.Model.Tag[]</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>TokenCode</name><description><para>The value provided by the MFA device, if the trust policy of the role being assumed requires MFA. (In other words, if the policy includes a condition that tests for MFA). If the role being assumed requires MFA and if the <code>TokenCode</code> value is missing or expired, the <code>AssumeRole</code> call returns an &quot;access denied&quot; error. 
The format for this parameter, as described by its regex pattern, is a sequence of six numeric digits. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>TransitiveTagKey</name><description><para>A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining">Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>. 
This parameter is optional. When you set session tags as transitive, the session policy and session tags packed binary limit is not affected. 
If you choose not to specify a transitive tag key, then no tags are passed from this session to any subsequent sessions. </para></description><parameterValue required="true" variableLength="false">System.String[]</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;*&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.AssumeRoleResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.AssumeRoleResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PassThru</name><description><para>Changes the cmdlet behavior to return the value passed to the RoleArn parameter. The -PassThru parameter is deprecated, use -Select &#39;^RoleArn&#39; instead. This parameter will be removed in a future version. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Force</name><description><para>This parameter overrides confirmation prompts to force  the cmdlet to continue its operation. This parameter should always be used with caution. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue><type><name>Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue><type><name>Amazon.Runtime.AWSCredentials</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="4"><name>DurationInSeconds</name><description><para>The duration, in seconds, of the role session. The value specified can range from 900 seconds (15 minutes) up to the maximum session duration set for the role. The maximum session duration setting can have a value from 1 hour to 12 hours. If you specify a value higher than this setting or the administrator setting (whichever is lower), the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails.  
Role chaining limits your Amazon Web Services CLI or Amazon Web Services API role session to a maximum of one hour. When you use the <code>AssumeRole</code> API operation to assume a role, you can specify the duration of your role session with the <code>DurationSeconds</code> parameter. You can specify a parameter value of up to 43200 seconds (12 hours), depending on the maximum session duration setting for your role. However, if you assume a role using role chaining and provide a <code>DurationSeconds</code> parameter value greater than one hour, the operation fails. To learn how to view the maximum value for your role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session">View the Maximum Session Duration Setting for a Role</a> in the <i>IAM User Guide</i>. 
By default, the value is set to <code>3600</code> seconds.  
The <code>DurationSeconds</code> parameter is separate from the duration of a console session that you might request using the returned credentials. The request to the federation endpoint for a console sign-in token takes a <code>SessionDuration</code> parameter that specifies the maximum length of the console session. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html">Creating a URL that Enables Federated Users to Access the Amazon Web Services Management Console</a> in the <i>IAM User Guide</i>. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue><type><name>System.Int32</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="5"><name>ExternalId</name><description><para>A unique identifier that might be required when you assume a role in another account. If the administrator of the account to which the role belongs provided you with an external ID, then provide that value in the <code>ExternalId</code> parameter. This value can be any string, such as a passphrase or account number. A cross-account role is usually set up to trust everyone in an account. Therefore, the administrator of the trusting account might send an external ID to the administrator of the trusted account. That way, only someone with the ID can assume the role, rather than everyone in the account. For more information about the external ID, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html">How to Use an External ID When Granting Access to Your Amazon Web Services Resources to a Third Party</a> in the <i>IAM User Guide</i>. 
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/- </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Force</name><description><para>This parameter overrides confirmation prompts to force  the cmdlet to continue its operation. This parameter should always be used with caution. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue><type><name>System.Management.Automation.PSCredential</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PassThru</name><description><para>Changes the cmdlet behavior to return the value passed to the RoleArn parameter. The -PassThru parameter is deprecated, use -Select &#39;^RoleArn&#39; instead. This parameter will be removed in a future version. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>Policy</name><description><para>An IAM policy in JSON format that you want to use as an inline session policy. 
This parameter is optional. Passing policies to this operation returns new temporary credentials. The resulting session&#39;s permissions are the intersection of the role&#39;s identity-based policy and the session policies. You can use the role&#39;s temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">Session Policies</a> in the <i>IAM User Guide</i>. 
The plaintext that you use for both inline and managed session policies can&#39;t exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (\u0020 through \u00FF). It can also include the tab (\u0009), linefeed (\u000A), and carriage return (\u000D) characters. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PolicyArn</name><description><para>The Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as managed session policies. The policies must exist in the same account as the role. 
This parameter is optional. You can provide up to 10 managed policy ARNs. However, the plaintext that you use for both inline and managed session policies can&#39;t exceed 2,048 characters. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the Amazon Web Services General Reference. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. 
Passing policies to this operation returns new temporary credentials. The resulting session&#39;s permissions are the intersection of the role&#39;s identity-based policy and the session policies. You can use the role&#39;s temporary credentials in subsequent Amazon Web Services API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session">Session Policies</a> in the <i>IAM User Guide</i>. </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.Model.PolicyDescriptorType[]</parameterValue><type><name>Amazon.SecurityToken.Model.PolicyDescriptorType[]</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue><type><name>System.Object</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="True" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>RoleArn</name><description><para>The Amazon Resource Name (ARN) of the role to assume. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="True" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>RoleSessionName</name><description><para>An identifier for the assumed role session. 
Use the role session name to uniquely identify a session when the same role is assumed by different principals or for different reasons. In cross-account scenarios, the role session name is visible to, and can be logged by the account that owns the role. The role session name is also used in the ARN of the assumed role principal. This means that subsequent cross-account API requests that use the temporary security credentials will expose the role session name to the external account in their CloudTrail logs. 
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@- </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;*&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.AssumeRoleResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.AssumeRoleResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SerialNumber</name><description><para>The identification number of the MFA device that is associated with the user who is making the <code>AssumeRole</code> call. Specify this value if the trust policy of the role being assumed includes a condition that requires MFA authentication. The value is either the serial number for a hardware device (such as <code>GAHT12345678</code>) or an Amazon Resource Name (ARN) for a virtual device (such as <code>arn:aws:iam::123456789012:mfa/user</code>). 
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@- </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SourceIdentity</name><description><para>The source identity specified by the principal that is calling the <code>AssumeRole</code> operation. 
You can require users to specify a source identity when they assume a role. You do this by using the <code>sts:SourceIdentity</code> condition key in a role trust policy. You can use source identity information in CloudTrail logs to determine who took actions with a role. You can use the <code>aws:SourceIdentity</code> condition key to further control access to Amazon Web Services resources based on the value of source identity. For more information about using source identity, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html">Monitor and control actions taken with assumed roles</a> in the <i>IAM User Guide</i>. 
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-. You cannot use a value that begins with the text <code>aws:</code>. This prefix is reserved for Amazon Web Services internal use. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Tag</name><description><para>A list of session tags that you want to pass. Each session tag consists of a key name and an associated value. For more information about session tags, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html">Tagging Amazon Web Services STS Sessions</a> in the <i>IAM User Guide</i>. 
This parameter is optional. You can pass up to 50 session tags. The plaintext session tag keys can’t exceed 128 characters, and the values can’t exceed 256 characters. For these and additional limits, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length">IAM and STS Character Limits</a> in the <i>IAM User Guide</i>. 
An Amazon Web Services conversion compresses the passed inline session policy, managed policy ARNs, and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plaintext meets the other requirements. The <code>PackedPolicySize</code> response element indicates by percentage how close the policies and tags for your request are to the upper size limit. 
You can pass a session tag with the same key as a tag that is already attached to the role. When you do, session tags override a role tag with the same key.  
Tag key–value pairs are not case sensitive, but case is preserved. This means that you cannot have separate <code>Department</code> and <code>department</code> tag keys. Assume that the role has the <code>Department</code>=<code>Marketing</code> tag and you pass the <code>department</code>=<code>engineering</code> session tag. <code>Department</code> and <code>department</code> are not saved as separate tags, and the session tag passed in the request takes precedence over the role tag. 
Additionally, if you used temporary credentials to perform this operation, the new session inherits any transitive session tags from the calling session. If you pass a session tag with the same key as an inherited tag, the operation fails. To view the inherited tags for a session, see the CloudTrail logs. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_ctlogs">Viewing Session Tags in CloudTrail</a> in the <i>IAM User Guide</i>. </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.Model.Tag[]</parameterValue><type><name>Amazon.SecurityToken.Model.Tag[]</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>TokenCode</name><description><para>The value provided by the MFA device, if the trust policy of the role being assumed requires MFA. (In other words, if the policy includes a condition that tests for MFA). If the role being assumed requires MFA and if the <code>TokenCode</code> value is missing or expired, the <code>AssumeRole</code> call returns an &quot;access denied&quot; error. 
The format for this parameter, as described by its regex pattern, is a sequence of six numeric digits. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>TransitiveTagKey</name><description><para>A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining">Chaining Roles with Session Tags</a> in the <i>IAM User Guide</i>. 
This parameter is optional. When you set session tags as transitive, the session policy and session tags packed binary limit is not affected. 
If you choose not to specify a transitive tag key, then no tags are passed from this session to any subsequent sessions. </para></description><parameterValue required="true" variableLength="false">System.String[]</parameterValue><type><name>System.String[]</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>Amazon.SecurityToken.Model.AssumeRoleResponse</name><uri /><description /></type><description><para>This cmdlet returns an Amazon.SecurityToken.Model.AssumeRoleResponse object containing multiple properties. The object can also be referenced from properties attached to the cmdlet entry in the $AWSHistory stack.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Use-STSRole.html&amp;tocid=Use-STSRole</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink><navigationLink><linkText>Service API Reference:</linkText><uri>https://docs.aws.amazon.com/STS/latest/APIReference/</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>Use-STSRole -RoleSessionName "Bob" -RoleArn "arn:aws:iam::123456789012:role/demo" -Policy "...JSON policy..." -DurationInSeconds 3600</code><remarks><para>Description</para><para>-----------</para><para>Returns a set of temporary credentials (access key, secret key and session token) that can be used for one hour to access AWS resources that the requesting user might not normally have access to. The returned credentials have the permissions that are allowed by the access policy of the role being assumed and the policy that was supplied (you cannot use the supplied policy to grant permissions in excess of those defined by the access policy of the role being assumed).</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>Use-STSRole -RoleSessionName "Bob" -RoleArn "arn:aws:iam::123456789012:role/demo" -DurationInSeconds 3600</code><remarks><para>Description</para><para>-----------</para><para>Returns a set of temporary credentials, valid for one hour, that have the same permissions that are defined in the access policy of the role being assumed.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 3 --------------------------</title><code>Use-STSRole -RoleSessionName "Bob" -RoleArn "arn:aws:iam::123456789012:role/demo" -DurationInSeconds 3600 -SerialNumber "GAHT12345678" -TokenCode "123456"</code><remarks><para>Description</para><para>-----------</para><para>Returns a set of temporary credentials supplying the serial number and generated token from an MFA associated with the user credentials used to execute the cmdlet.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 4 --------------------------</title><code>Use-STSRole -RoleSessionName "Bob" -RoleArn "arn:aws:iam::123456789012:role/demo" -DurationInSeconds 3600 -ExternalId "ABC123"</code><remarks><para>Description</para><para>-----------</para><para>Returns a set of temporary credentials that have assumed a role defined in a customer account. For each role that the third party can assume, the customer account must create a role using an identifier that must be passed in the -ExternalId parameter each time the role is assumed.</para><para /><para /></remarks></example></examples></command><command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10"><details><name>Get-STSSessionToken</name><description><para>Calls the AWS Security Token Service (STS) GetSessionToken API operation.</para></description><verb>Get</verb><noun>STSSessionToken</noun><copyright><para>&amp;copy; Copyright 2012 - 2023 Amazon.com, Inc.or its affiliates.All Rights Reserved.</para></copyright></details><description><para>Returns a set of temporary credentials for an Amazon Web Services account or IAM user. The credentials consist of an access key ID, a secret access key, and a security token. Typically, you use <code>GetSessionToken</code> if you want to use MFA to protect programmatic calls to specific Amazon Web Services API operations like Amazon EC2 <code>StopInstances</code>. MFA-enabled IAM users would need to call <code>GetSessionToken</code> and submit an MFA code that is associated with their MFA device. Using the temporary security credentials that are returned from the call, IAM users can then make programmatic calls to API operations that require MFA authentication. If you do not supply a correct MFA code, then the API returns an access denied error. For a comparison of <code>GetSessionToken</code> with the other API operations that produce temporary credentials, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html">Requesting Temporary Security Credentials</a> and <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison">Comparing the Amazon Web Services STS API operations</a> in the <i>IAM User Guide</i>. 
No permissions are required for users to perform this operation. The purpose of the <code>sts:GetSessionToken</code> operation is to authenticate the user using MFA. You cannot use policies to control authentication operations. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_getsessiontoken.html">Permissions for GetSessionToken</a> in the <i>IAM User Guide</i>. 
<b>Session Duration</b> 
The <code>GetSessionToken</code> operation must be called by using the long-term Amazon Web Services security credentials of the Amazon Web Services account root user or an IAM user. Credentials that are created by IAM users are valid for the duration that you specify. This duration can range from 900 seconds (15 minutes) up to a maximum of 129,600 seconds (36 hours), with a default of 43,200 seconds (12 hours). Credentials based on account credentials can range from 900 seconds (15 minutes) up to 3,600 seconds (1 hour), with a default of 1 hour.  
<b>Permissions</b> 
The temporary security credentials created by <code>GetSessionToken</code> can be used to make API calls to any Amazon Web Services service with the following exceptions: 
 - 
You cannot call any IAM API operations unless MFA authentication information is included in the request. 
 - 
You cannot call any STS API <i>except</i><code>AssumeRole</code> or <code>GetCallerIdentity</code>. 
We recommend that you do not call <code>GetSessionToken</code> with Amazon Web Services account root user credentials. Instead, follow our <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#create-iam-users">best practices</a> by creating one or more IAM users, giving them the necessary permissions, and using IAM users for everyday interaction with Amazon Web Services.  
The credentials that are returned by <code>GetSessionToken</code> are based on permissions associated with the user whose credentials were used to call the operation. If <code>GetSessionToken</code> is called using Amazon Web Services account root user credentials, the temporary credentials have root user permissions. Similarly, if <code>GetSessionToken</code> is called using the credentials of an IAM user, the temporary credentials have the same permissions as the IAM user.  
For more information about using <code>GetSessionToken</code> to create temporary credentials, go to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getsessiontoken">Temporary Credentials for Users in Untrusted Environments</a> in the <i>IAM User Guide</i>. </para></description><syntax><syntaxItem><name>Get-STSSessionToken</name><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>DurationInSeconds</name><description><para>The duration, in seconds, that the credentials should remain valid. Acceptable durations for IAM user sessions range from 900 seconds (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the default. Sessions for Amazon Web Services account owners are restricted to a maximum of 3,600 seconds (one hour). If the duration is longer than one hour, the session for Amazon Web Services account owners defaults to one hour. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>SerialNumber</name><description><para>The identification number of the MFA device that is associated with the IAM user who is making the <code>GetSessionToken</code> call. Specify this value if the IAM user has a policy that requires MFA authentication. The value is either the serial number for a hardware device (such as <code>GAHT12345678</code>) or an Amazon Resource Name (ARN) for a virtual device (such as <code>arn:aws:iam::123456789012:mfa/user</code>). You can find the device for an IAM user by going to the Amazon Web Services Management Console and viewing the user&#39;s security credentials.  
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/- </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>TokenCode</name><description><para>The value provided by the MFA device, if MFA is required. If any policy requires the IAM user to submit an MFA code, specify this value. If MFA authentication is required, the user must provide a code when requesting a set of temporary security credentials. A user who fails to provide the code receives an &quot;access denied&quot; response when requesting resources that require MFA authentication. 
The format for this parameter, as described by its regex pattern, is a sequence of six numeric digits. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;Credentials&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.GetSessionTokenResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.GetSessionTokenResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PassThru</name><description><para>Changes the cmdlet behavior to return the value passed to the DurationInSeconds parameter. The -PassThru parameter is deprecated, use -Select &#39;^DurationInSeconds&#39; instead. This parameter will be removed in a future version. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue></parameter></syntaxItem></syntax><parameters><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>AccessKey</name><description><para>The AWS access key for the user account. This can be a temporary access key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ClientConfig</name><description><para>Amazon.PowerShell.Cmdlets.STS.AmazonSecurityTokenServiceClientCmdlet.ClientConfig </para></description><parameterValue required="true" variableLength="false">Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</parameterValue><type><name>Amazon.SecurityToken.AmazonSecurityTokenServiceConfig</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>Credential</name><description><para>An AWSCredentials object instance containing access and secret key information, and optionally a token for session-based credentials. </para></description><parameterValue required="true" variableLength="false">Amazon.Runtime.AWSCredentials</parameterValue><type><name>Amazon.Runtime.AWSCredentials</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="1"><name>DurationInSeconds</name><description><para>The duration, in seconds, that the credentials should remain valid. Acceptable durations for IAM user sessions range from 900 seconds (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the default. Sessions for Amazon Web Services account owners are restricted to a maximum of 3,600 seconds (one hour). If the duration is longer than one hour, the session for Amazon Web Services account owners defaults to one hour. </para></description><parameterValue required="true" variableLength="false">System.Int32</parameterValue><type><name>System.Int32</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>EndpointUrl</name><description><para>The endpoint to make the call against. 
<b>Note:</b> This parameter is primarily for internal AWS use and is not required/should not be specified for  normal usage. The cmdlets normally determine which endpoint to call based on the region specified to the -Region parameter or set as default in the shell (via Set-DefaultAWSRegion). Only specify this parameter if you must direct the call to a specific custom endpoint. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByValue, ByPropertyName)" position="Named"><name>NetworkCredential</name><description><para>Used with SAML-based authentication when ProfileName references a SAML role profile.  Contains the network credentials to be supplied during authentication with the  configured identity provider&#39;s endpoint. This parameter is not required if the user&#39;s default network identity can or should be used during authentication. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</parameterValue><type><name>System.Management.Automation.PSCredential</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>PassThru</name><description><para>Changes the cmdlet behavior to return the value passed to the DurationInSeconds parameter. The -PassThru parameter is deprecated, use -Select &#39;^DurationInSeconds&#39; instead. This parameter will be removed in a future version. </para></description><parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</parameterValue><type><name>System.Management.Automation.SwitchParameter</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileLocation</name><description><para>Used to specify the name and location of the ini-format credential file (shared with the AWS CLI and other AWS SDKs) 
If this optional parameter is omitted this cmdlet will search the encrypted credential file used by the AWS SDK for .NET and AWS Toolkit for Visual Studio first. If the profile is not found then the cmdlet will search in the ini-format credential file at the default location: (user&#39;s home directory)\.aws\credentials. 
If this parameter is specified then this cmdlet will only search the ini-format credential file at the location given. 
As the current folder can vary in a shell or during script execution it is advised that you use specify a fully qualified path instead of a relative path. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>ProfileName</name><description><para>The user-defined name of an AWS credentials or SAML-based role profile containing credential information. The profile is expected to be found in the secure credential file shared with the AWS SDK for .NET and AWS Toolkit for Visual Studio. You can also specify the name of a profile stored in the .ini-format credential file used with  the AWS CLI and other AWS SDKs. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Region</name><description><para>The system name of an AWS region or an AWSRegion instance. This governs the endpoint that will be used when calling service operations. Note that  the AWS resources referenced in a call are usually region-specific. </para></description><parameterValue required="true" variableLength="false">System.Object</parameterValue><type><name>System.Object</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SecretKey</name><description><para>The AWS secret key for the user account. This can be a temporary secret key if the corresponding session token is supplied to the -SessionToken parameter. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>Select</name><description><para>Use the -Select parameter to control the cmdlet output. The default value is &#39;Credentials&#39;. Specifying -Select &#39;*&#39; will result in the cmdlet returning the whole service response (Amazon.SecurityToken.Model.GetSessionTokenResponse). Specifying the name of a property of type Amazon.SecurityToken.Model.GetSessionTokenResponse will result in that property being returned. Specifying -Select &#39;^ParameterName&#39; will result in the cmdlet returning the selected cmdlet parameter value. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2"><name>SerialNumber</name><description><para>The identification number of the MFA device that is associated with the IAM user who is making the <code>GetSessionToken</code> call. Specify this value if the IAM user has a policy that requires MFA authentication. The value is either the serial number for a hardware device (such as <code>GAHT12345678</code>) or an Amazon Resource Name (ARN) for a virtual device (such as <code>arn:aws:iam::123456789012:mfa/user</code>). You can find the device for an IAM user by going to the Amazon Web Services Management Console and viewing the user&#39;s security credentials.  
The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/- </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="Named"><name>SessionToken</name><description><para>The session token if the access and secret keys are temporary session-based credentials. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter><parameter required="False" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="3"><name>TokenCode</name><description><para>The value provided by the MFA device, if MFA is required. If any policy requires the IAM user to submit an MFA code, specify this value. If MFA authentication is required, the user must provide a code when requesting a set of temporary security credentials. A user who fails to provide the code receives an &quot;access denied&quot; response when requesting resources that require MFA authentication. 
The format for this parameter, as described by its regex pattern, is a sequence of six numeric digits. </para></description><parameterValue required="true" variableLength="false">System.String</parameterValue><type><name>System.String</name><uri /></type><defaultValue>None</defaultValue></parameter></parameters><returnValues><returnValue><type><name>Amazon.SecurityToken.Model.Credentials or Amazon.SecurityToken.Model.GetSessionTokenResponse</name><uri /><description /></type><description><para>This cmdlet returns an Amazon.SecurityToken.Model.Credentials object.
The service call response (type Amazon.SecurityToken.Model.GetSessionTokenResponse) can also be referenced from properties attached to the cmdlet entry in the $AWSHistory stack.</para></description></returnValue></returnValues><relatedLinks><navigationLink><linkText>Online version:</linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/index.html?page=Get-STSSessionToken.html&amp;tocid=Get-STSSessionToken</uri></navigationLink><navigationLink><linkText>Common credential and region parameters: </linkText><uri>http://docs.aws.amazon.com/powershell/latest/reference/items/pstoolsref-commonparams.html</uri></navigationLink><navigationLink><linkText>Service API Reference:</linkText><uri>https://docs.aws.amazon.com/STS/latest/APIReference/</uri></navigationLink></relatedLinks><examples><example><title>-------------------------- EXAMPLE 1 --------------------------</title><code>
Get-STSSessionToken

AccessKeyId                             Expiration                              SecretAccessKey                        SessionToken
-----------                             ----------                              ---------------                        ------------
EXAMPLEACCESSKEYID                      2/16/2015 9:12:28 PM                    examplesecretaccesskey...              SamPleTokeN.....
    </code><remarks><para>Description</para><para>-----------</para><para>Returns an Amazon.RuntimeAWSCredentials instance containing temporary credentials valid for a set period of time. The credentials used to request temporary credentials are inferred from the current shell defaults. To specify other credentials, use the -ProfileName or -AccessKey/-SecretKey parameters.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 2 --------------------------</title><code>
Get-STSSessionToken -DurationInSeconds 3600 -ProfileName myprofile

AccessKeyId                             Expiration                              SecretAccessKey                        SessionToken
-----------                             ----------                              ---------------                        ------------
EXAMPLEACCESSKEYID                      2/16/2015 9:12:28 PM                    examplesecretaccesskey...              SamPleTokeN.....
    </code><remarks><para>Description</para><para>-----------</para><para>Returns an Amazon.RuntimeAWSCredentials instance containing temporary credentials valid for one hour. The credentials used to make the request are obtained from the specified profile.</para><para /><para /></remarks></example><example><title>-------------------------- EXAMPLE 3 --------------------------</title><code>
Get-STSSessionToken -DurationInSeconds 3600 -ProfileName myprofile -SerialNumber YourMFADeviceSerialNumber -TokenCode 123456

AccessKeyId                             Expiration                              SecretAccessKey                        SessionToken
-----------                             ----------                              ---------------                        ------------
EXAMPLEACCESSKEYID                      2/16/2015 9:12:28 PM                    examplesecretaccesskey...              SamPleTokeN.....
    </code><remarks><para>Description</para><para>-----------</para><para>Returns an Amazon.RuntimeAWSCredentials instance containing temporary credentials valid for one hour using the identification number of the MFA device associated with the account whose credentials are specified in the profile 'myprofilename' and the value provided by the device.</para><para /><para /></remarks></example></examples></command></helpItems>